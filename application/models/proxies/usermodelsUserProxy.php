<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class usermodelsUserProxy extends \user\models\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function id()
    {
        $this->__load();
        return parent::id();
    }

    public function created()
    {
        $this->__load();
        return parent::created();
    }

    public function updated()
    {
        $this->__load();
        return parent::updated();
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function setFirstname($firstname)
    {
        $this->__load();
        return parent::setFirstname($firstname);
    }

    public function getFirstname()
    {
        $this->__load();
        return parent::getFirstname();
    }

    public function setMiddlename($middlename)
    {
        $this->__load();
        return parent::setMiddlename($middlename);
    }

    public function getMiddlename()
    {
        $this->__load();
        return parent::getMiddlename();
    }

    public function getLastname()
    {
        $this->__load();
        return parent::getLastname();
    }

    public function setLastname($lastname)
    {
        $this->__load();
        return parent::setLastname($lastname);
    }

    public function setUsername($username)
    {
        $this->__load();
        return parent::setUsername($username);
    }

    public function getUsername()
    {
        $this->__load();
        return parent::getUsername();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setPhone($phone)
    {
        $this->__load();
        return parent::setPhone($phone);
    }

    public function getPhone()
    {
        $this->__load();
        return parent::getPhone();
    }

    public function setResetcode($resetcode)
    {
        $this->__load();
        return parent::setResetcode($resetcode);
    }

    public function getResetcode()
    {
        $this->__load();
        return parent::getResetcode();
    }

    public function setResettime($resettime)
    {
        $this->__load();
        return parent::setResettime($resettime);
    }

    public function getResettime()
    {
        $this->__load();
        return parent::getResettime();
    }

    public function assignGroup(\user\models\Group $role)
    {
        $this->__load();
        return parent::assignGroup($role);
    }

    public function unassignGroup(\user\models\Group $role)
    {
        $this->__load();
        return parent::unassignGroup($role);
    }

    public function getGroups()
    {
        $this->__load();
        return parent::getGroups();
    }

    public function getContents()
    {
        $this->__load();
        return parent::getContents();
    }

    public function setLastLoginDate()
    {
        $this->__load();
        return parent::setLastLoginDate();
    }

    public function getLastLoginDate()
    {
        $this->__load();
        return parent::getLastLoginDate();
    }

    public function setLoginAttempts($no_of_login_attempts)
    {
        $this->__load();
        return parent::setLoginAttempts($no_of_login_attempts);
    }

    public function getLoginAttempts()
    {
        $this->__load();
        return parent::getLoginAttempts();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'firstname', 'middlename', 'lastname', 'username', 'password', 'email', 'phone', 'resetcode', 'resettime', 'status', 'created', 'updated', 'lastLoginDate', 'no_of_login_attempts', 'groups', 'contents');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}